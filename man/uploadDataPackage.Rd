% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/D1Client.R
\name{uploadDataPackage}
\alias{uploadDataPackage}
\title{Upload a DataPackage to a DataONE member node.}
\usage{
uploadDataPackage(x, ...)
}
\arguments{
\item{x}{A D1Client instance.}

\item{...}{(Not yet used.)}
}
\value{
id The identifier of the resource map for this data package
}
\description{
Upload all DataObjects contained in the DataPackage by calling \code{\link{uploadDataObject}}
on each of the members. Also a resourceMap object is created from the
recorded relationships between DataObjects, and this is uploaded as well.
}
\details{
The DataPackage describes the collection of data object and their associated 
metadata object, with the relationships and members serialized into a document
stored under, and retrievable with, the packageId as it's own distinct object.
Any objects in the data map that have a dataUploaded value are assumed to be 
pre-existing in the system, and skipped.
}
\note{
Member objects are created serially, and most errors in creating one object will 
interrupt the create process for the whole, with the result that some members will 
be created, and the remainder not.
}
\examples{
\dontrun{
library(dataone)
library(datapackage)
dp <- new("DataPackage")
sampleData <- system.file("extdata/sample.csv", package="dataone")
cn <- CNode("STAGING")
mn <- getMNode(cn, "urn:node:mnStageUCSB2")
dataObj <- new("DataObject", format="text/csv", file=sampleData)
dataObj <- setPublicAccess(dataObj)
sampleEML <- system.file("extdata/sample-eml.xml", package="dataone")
metadataObj <- new("DataObject", format="eml://ecoinformatics.org/eml-2.1.1", file=sampleEML)
metadataObj <- setPublicAccess(metadataObj)
addData(dp, metadataObj)
addData(dp, dataObj, metadataObj)
d1c <- D1Client(env="STAGING", mNodeid="urn:node:mnStageUCSB2")
packageId <- uploadDataPackage(d1c, dp, replicate=TRUE, public=TRUE, numberReplicas=2)
}
}
\seealso{
\code{\link[=D1Client-class]{D1Client}}{ class description.}
}

