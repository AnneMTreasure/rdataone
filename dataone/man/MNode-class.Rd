% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/MNode.R
\docType{class}
\name{MNode-class}
\alias{MNode,D1Node-method}
\alias{MNode,character-method}
\alias{MNode-class}
\alias{archive,MNode,character-method}
\alias{create,MNode,character-method}
\alias{describe,MNode,character-method}
\alias{generateIdentifier,MNode-method}
\alias{get,MNode,character-method}
\alias{getCapabilities,MNode-method}
\alias{getSystemMetadata,MNode,character-method}
\alias{update,MNode,character-method}
\title{MNode is a class representing a Member Node repository within the DataONE federation of data repositories.}
\usage{
\S4method{MNode}{character}(x)

\S4method{MNode}{D1Node}(x)

\S4method{getCapabilities}{MNode}(mnode)

\S4method{get}{MNode,character}(node, pid)

\S4method{getSystemMetadata}{MNode,character}(node, pid)

\S4method{describe}{MNode,character}(node, pid)

\S4method{create}{MNode,character}(mnode, pid, filepath, sysmeta)

\S4method{update}{MNode,character}(mnode, pid, filepath, newpid, sysmeta)

\S4method{archive}{MNode,character}(mnode, pid)

\S4method{generateIdentifier}{MNode}(mnode, scheme = "UUID",
  fragment = NULL)
}
\arguments{
\item{mnode}{The MNode instance from which the identifier will be generated}

\item{node}{The MNode instance from which the pid will be downloaded}

\item{pid}{The identifier of the object to be downloaded}

\item{node}{The MNode instance from which the SystemMetadata will be downloaded}

\item{pid}{The identifier of the object}

\item{pid}{Identifier for the object in question. May be either a PID or a SID. Transmitted as
part of the URL path and must be escaped accordingly.}
}
\value{
the bytes of the object

SystemMetadata for the object

A list of header elements
}
\description{
MNode provides functions interacting with the a DataONE Member Node repository, which
is a repository that provides access for reading and writing data and metadata using the common
DataONE service API.  The MNode API includes functions for retrieving data and metadata based on its
unique persistent identifier (pid), as well as for creating, updating, and archiving these data and
metadata objects.

Get the bytes associated with an object on this Member Node.

The SystemMetadata includes information about the identity, type, access control, and other system
level details about the object.

This method provides a lighter weight mechanism than getSystemMetadata() for a client to
determine basic properties of the referenced object.
}
\details{
Methods that perform write operations on the Member Node generally require
authentication, which is managed via a client-side X.509 certificate via
CILogon \url{https://cilogon.org/?skin=DataONE}.  See \code{\link{{CertificateManager}}} for details.

This operation acts as the 'public' anonymous user unless an X.509 certificate is
present in the default location of the file system, in which case the access will be authenticated.

This operation acts as the 'public' anonymous user unless an X.509 certificate is
present in the default location of the file system, in which case the access will be authenticated.
}
\section{Methods (by generic)}{
\itemize{
\item \code{MNode}: 

\item \code{MNode}: 

\item \code{getCapabilities}: 

\item \code{get}: 

\item \code{getSystemMetadata}: 

\item \code{describe}: 

\item \code{create}: 

\item \code{update}: 

\item \code{archive}: 

\item \code{generateIdentifier}: 
}}
\section{Slots}{

\describe{
\item{\code{endpoint}}{The url to access node services, which is the baseURL plus the version string}
}}
\examples{
\dontrun{
cn <- CNode("STAGING2")
mn <- getMNode(cn, "urn:node:mnTestKNB")
mnid <- mn@identifier
newid <- generateIdentifier(mn, "UUID")
cm <- CertificateManager()
u <- showClientSubject(cm)
testdf <- data.frame(x=1:10,y=11:20)
csvfile <- paste(tempfile(), ".csv", sep="")
write.csv(testdf, csvfile, row.names=FALSE)
f <- "text/csv"
size <- file.info(csvfile)$size
sha1 <- digest(csvfile, algo="sha1", serialize=FALSE, file=TRUE)
sysmeta <- new("SystemMetadata", identifier=newid, formatId=f, size=size, submitter=u, rightsHolder=u, checksum=sha1, originMemberNode=mnid, authoritativeMemberNode=mnid)
response <- create(mn, newid, csvfile, sysmeta)
response <- archive(mn, newid)
}
\dontrun{
mn_uri <- "https://knb.ecoinformatics.org/knb/d1/mn/v1"
mn <- MNode(mn_uri)
pid <- "knb.473.1"
describe(mn, pid)
describe(mn, "adfadf") # warning message when wrong pid
}
}
\author{
Matthew Jones

Scott Chamberlain
}
\seealso{
\url{http://mule1.dataone.org/ArchitectureDocs-current/apis/MN_APIs.html#MNRead.get}

\url{http://mule1.dataone.org/ArchitectureDocs-current/apis/MN_APIs.html#MNRead.getSystemMetadata}

\url{http://mule1.dataone.org/ArchitectureDocs-current/apis/MN_APIs.html#MNRead.describe}
}
\keyword{classes}

